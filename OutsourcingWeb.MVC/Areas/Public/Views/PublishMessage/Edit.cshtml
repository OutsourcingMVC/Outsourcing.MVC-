@model OutsourcingWeb.MVC.Areas.Public.Models.RequirementEditViewModel
@{
    ViewBag.Title = "编辑需求信息";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}
@*<script src="~/Scripts/js/jquery-1.8.0.js"></script>*@
<!--消息提示框-->
@*<link rel="stylesheet" href="~/Scripts/sweetalert/sweetalert.css" />
    <script type="text/javascript" src="~/Scripts/sweetalert/sweetalert.min.js"></script>*@

<!--表格样式-->
<link href="~/Scripts/devoops/bootstrap.css" rel="stylesheet">
<script src="~/Scripts/devoops/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Scripts/devoops/bootstrap-table.js"></script>
<link href="http://cdn.bootcss.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">

<!--时间控件-->
<link href="~/Scripts/devoops/datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/devoops/datetimepicker/js/bootstrap-datetimepicker.js"></script>
<script src="~/Scripts/devoops/datetimepicker/js/bootstrap-datetimepicker.zh-CN.js"></script>

<input type="hidden" name="loginid" id="loginid" value="@ViewBag.LoginID">
<input type="hidden" name="types" id="types" value="@ViewBag.Type">
<div class="center-block" style="width:800px;">
    <form class="form-horizontal">
        <fieldset>
            <legend>编辑需求信息</legend><p>标<span style="color:red; ">*</span>的为必填项</p>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_host"><span style="color:red; ">*</span>职位名称</label>
                <div class="col-sm-4">
                    <input id="JobName" type="text" class="form-control" placeholder="请输入职位名称" />
                </div>
                <label class="col-sm-2 control-label" for="ds_name" style="width: 138px;"><span style="color:red; ">*</span>招聘人数</label>
                <div class="col-sm-4">
                    <input id="RecNumber" type="text" class="form-control" placeholder="请输入招聘人数" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username"><span style="color:red; ">*</span>项目名称</label>
                <div class="col-sm-4">
                    <input class="form-control" id="ProjectName" type="text" placeholder="请输入项目名称" />
                </div>
                <label class="col-sm-2 control-label" for="ds_password" style="width: 138px;">备&nbsp;&nbsp;&nbsp;&nbsp;注</label>
                <div class="col-sm-4">
                    <input class="form-control" id="Remark" type="text" placeholder="请输入项目名称备注" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username">工作地点</label>
                <div class="col-sm-4">
                    <input class="form-control" id="ProjectAddress" type="text" placeholder="请输入工作地点" />
                </div>
                <label class="col-sm-2 control-label" for="ds_password" style="width: 138px;"><span style="color:red; ">*</span>到岗时间</label>
                <div class="col-sm-4">
                    <input class="form-control" id="ArrivalTime" type="text" placeholder="请输入到岗时间" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username">发布日期</label>
                <div class="col-sm-4">
                    <input class="form-control" id="PublishTime" type="text" placeholder="请输入发布日期" />
                </div>
                <label class="col-sm-2 control-label" for="ds_password" style="width: 138px;">职位月薪</label>
                <div class="col-sm-4">
                    <select id="Salary" class="form-control select" style="width:200px;">
                        <option value="1">4000</option>
                        <option value="2">4000元-6000元</option>
                        <option value="3">6000元-8000元</option>
                        <option value="4">8000元-10000元</option>
                        <option value="5">10000元以上</option>
                        <option value="6">面议</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username">工作性质</label>
                <div class="col-sm-4">
                    <select id="Property" class="form-control select" style="width:200px;">
                        <option value="1">不限</option>
                        <option value="2">全职</option>
                        <option value="3">兼职</option>
                        <option value="4">实习</option>
                    </select>
                </div>
                <label class="col-sm-2 control-label" for="ds_password" style="width: 138px;"><span style="color:red; ">*</span>工作经验</label>
                <div class="col-sm-4">
                    <select id="Experience" class="form-control select" style="width:200px;">
                        <option value="1">不限</option>
                        <option value="2">无经验</option>
                        <option value="3">1年以下</option>
                        <option value="4">1-3年</option>
                        <option value="5">3-5年</option>
                        <option value="6">5-10年</option>
                        <option value="7">10年以上</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username">最低学历</label>
                <div class="col-sm-4">
                    <select id="Education" class="form-control select" style="width:200px;">
                        <option value="1">不限</option>
                        <option value="2">无学历要求</option>
                        <option value="3">高中/中转/中技及以下</option>
                        <option value="4">大专及等同学历</option>
                        <option value="5">本科学历</option>
                        <option value="6">硕士学历</option>
                        <option value="7">博士及以上</option>
                        <option value="8">其他</option>
                    </select>
                </div>
                <label class="col-sm-2 control-label" for="ds_password" style="width: 138px;"><span style="color:red; ">*</span>技术语言</label>
                <div class="col-sm-4">
                    <select id="TecLanguage" class="form-control select" style="width:200px;">
                        <option value="1">Java</option>
                        <option value="2">C/C++</option>
                        <option value="3">C#/.Net</option>
                        <option value="4">HTML</option>
                        <option value="5">PHP</option>
                        <option value="6">Web前端</option>
                        <option value="7">美工</option>
                       
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_username"><span style="color:red; ">*</span>职位类别</label>
                <div class="col-sm-4">
                    <select id="JobCategory" class="form-control select" style="width:200px;">
                        <option value="1">web应用开发</option>
                        <option value="2">移动应用开发</option>
                        <option value="3">微信开发</option>
                        <option value="4">应用桌面开发</option>
                        <option value="5">系统分析设计</option>
                        <option value="6">数据分析设计</option>
                    </select>
                </div>
                @*<label class="col-sm-2 control-label" for="ds_password">技术语言</label>
                    <div class="col-sm-4">
                        <select id="TecLanguage" class="form-control select" style="width:200px;">
                            <option value="1">Java</option>
                            <option value="2">C/C++</option>
                            <option value="3">C#/Asp.Net</option>
                            <option value="4">HTML</option>
                            <option value="5">PHP</option>
                        </select>
                    </div>*@
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_host">职位描述</label>
                <div class="col-sm-4">
                    <script id="JobDescription" type="text/plain" style="width:650px;height:200px; ">
                    </script>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="ds_host">公司简介</label>
                <div class="col-sm-4">
                    <script id="ComProfile" type="text/plain" style="width:650px;height:200px;">
                    </script>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-5 col-sm-10">
                    <input id="HId" type="hidden" value="@Session["td"]"/>
                    <button type="button" class="btn btn-default btn-app-sm btn-primary" id="submit" onclick="btnSubmit();">
                        保存
                    </button>
                    &nbsp;&nbsp;&nbsp;
                    <button type="reset" class="btn btn-default btn-app-sm btn-primary">
                        重置
                    </button>
                </div>
            </div>
        </fieldset>
    </form>
    <div></div>
</div>
<!-- 编辑器样式 -->
<script type="text/javascript" charset="utf-8" src="~/ueditor/ueditor.config.js"></script>
<script type="text/javascript" charset="utf-8" src="~/ueditor/ueditor.all.min.js"> </script>
<!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
<!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
<script type="text/javascript" charset="utf-8" src="~/ueditor/lang/zh-cn/zh-cn.js"></script>
<script type="text/javascript">
    //debugger;
    var str = location.search;
    //var num = str.split('?RequirementId=')[1];
    var num = str.substr(1).split("&")[0] //返回第一个参数
    num = num.split('RequirementId=')[1];    
    $(function () {
        var ComProfile = UE.getEditor('ComProfile');
        var JobDescription = UE.getEditor('JobDescription');
        
        if (num != null) {
            //debugger;
            $.ajax({
                type: "POST",
                url: "/Public/PublishMessage/GetDate",
                data: { RequirementId: num },
                //dataType: "text",
                success: function (requirement) {
                    debugger;
                    $("#JobName").val(requirement[0].JobName);
                    $("#RecNumber").val(requirement[0].RecNumber);
                    $("#ProjectName").val(requirement[0].ProjectName);
                    var time = requirement[0].ArrivalTime;
                    if (time != null) {
                        var str = time.substring(6, 16);
                        //$("#ArrivalTime").val(getLocalTime(time));
                        $("#ArrivalTime").val(UnixToDate(str));
                    }
                    $("#Remark").val(requirement[0].Remark);
                    $("#ProjectAddress").val(requirement[0].ProjectAddress);
                    var times = requirement[0].PublishTime;
                    if (times != null) {
                        var strs = times.substring(6, 16);
                        $("#PublishTime").val(UnixToDate(strs));
                    }
                    $("#Salary").val(requirement[0].Salary);
                    $("#Property").val(requirement[0].Property);
                    $("#Experience").val(requirement[0].Experience);
                    $("#Education").val(requirement[0].Education);
                    $("#TecLanguage").val(requirement[0].TecLanguage);
                    UE.getEditor('JobDescription').setContent(decodeURIComponent(requirement[0].JobDescription));
                    UE.getEditor('ComProfile').setContent(decodeURIComponent(requirement[0].ComProfile));
                    $("#HId").val(requirement[0].RequirementId);
                }
            });
        }
    })



    //保存
    function btnSubmit() {
        debugger;
        var RequirementId = $("#HId").val();
        var JobName = $("#JobName").val();
        var RecNumber = $("#RecNumber").val();
        var ProjectName = $("#ProjectName").val();
        var ArrivalTime = $("#ArrivalTime").val();
        var Remark = $("#Remark").val();
        var ProjectAddress = $("#ProjectAddress").val();
        var PublishTime = $("#PublishTime").val();
        var Salary = $("#Salary").val();
        var Property = $("#Property").val();
        var Experience = $("#Experience").val();
        var Education = $("#Education").val();
        var TecLanguage = $("#TecLanguage").val();
        var JobCategory = $("#JobCategory").val();
        var arr = [];
        arr.push(UE.getEditor('JobDescription').getContent());
        var JobDescription = arr[0];
        var arrs = [];
        arrs.push(UE.getEditor('ComProfile').getContent());
        var ComProfile = arrs[0];
        
        $.ajax({
            type: "POST",
            url: "/Public/PublishMessage/UpDate",
            data: {
                RequirementId: RequirementId, JobName: JobName, RecNumber: RecNumber, ProjectName: ProjectName,
                ArrivalTime: ArrivalTime, Remark: Remark, ProjectAddress: ProjectAddress, PublishTime: PublishTime,
                Salary: Salary, Property: Property, Experience: Experience, Education: Education,
                TecLanguage: TecLanguage, JobCategory: JobCategory, JobDescription: encodeURIComponent(JobDescription), ComProfile: encodeURIComponent(ComProfile)
            },
            success: function (msg) {
                if (msg == "更新成功") {
                    swal("信息更新成功!", "", "success");
                }
                else { swal("信息更新失败!", "", "error"); }
            }
        });
    };

    /*    function isFocus(e){
            alert(UE.getEditor('editor').isFocus());
            UE.dom.domUtils.preventDefault(e)
        }
        function setblur(e){
            UE.getEditor('editor').blur();
            UE.dom.domUtils.preventDefault(e)
        }
        function insertHtml() {
            var value = prompt('插入html代码', '');
            UE.getEditor('editor').execCommand('insertHtml', value)
        }
        function createEditor() {
            enableBtn();
            UE.getEditor('editor');
        }
        function getAllHtml() {
            alert(UE.getEditor('editor').getAllHtml())
        }
        function getContent() {
            var arr = [];
            arr.push("使用editor.getContent()方法可以获得编辑器的内容");
            arr.push("内容为：");
            arr.push(UE.getEditor('editor').getContent());
            alert(arr.join("\n"));
        }
        function getPlainTxt() {
            var arr = [];
            arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
            arr.push("内容为：");
            arr.push(UE.getEditor('editor').getPlainTxt());
            alert(arr.join('\n'))
        }
        function setContent(isAppendTo) {
            var arr = [];
            arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
            UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
            alert(arr.join("\n"));
        }
        function setDisabled() {
            UE.getEditor('editor').setDisabled('fullscreen');
            disableBtn("enable");
        }

        function setEnabled() {
            UE.getEditor('editor').setEnabled();
            enableBtn();
        }

        function getText() {
            var range = UE.getEditor('editor').selection.getRange();
            range.select();
            var txt = UE.getEditor('editor').selection.getText();
            alert(txt)
        }

        function getContentTxt() {
            var arr = [];
            arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
            arr.push("编辑器的纯文本内容为：");
            arr.push(UE.getEditor('editor').getContentTxt());
            alert(arr.join("\n"));
        }
        function hasContent() {
            var arr = [];
            arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
            arr.push("判断结果为：");
            arr.push(UE.getEditor('editor').hasContents());
            alert(arr.join("\n"));
        }
        function setFocus() {
            UE.getEditor('editor').focus();
        }
        function deleteEditor() {
            disableBtn();
            UE.getEditor('editor').destroy();
        }
        function disableBtn(str) {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++];) {
                if (btn.id == str) {
                    UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                } else {
                    btn.setAttribute("disabled", "true");
                }
            }
        }
        function enableBtn() {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++];) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            }
        }

        function getLocalData () {
            alert(UE.getEditor('editor').execCommand( "getlocaldata" ));
        }

        function clearLocalData () {
            UE.getEditor('editor').execCommand( "clearlocaldata" );
            alert("已清空草稿箱")
        }*/

    /*function isFocus(e){
        alert(UE.getEditor('editors').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }
    function setblur(e){
        UE.getEditor('editors').blur();
        UE.dom.domUtils.preventDefault(e)
    }
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editors').execCommand('insertHtml', value)
    }
    function createEditor() {
        enableBtn();
        UE.getEditor('editors');
    }
    function getAllHtml() {
        alert(UE.getEditor('editors').getAllHtml())
    }
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editors').getContent());
        alert(arr.join("\n"));
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editors').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
        UE.getEditor('editors').setContent('欢迎使用ueditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setDisabled() {
        UE.getEditor('editors').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UE.getEditor('editors').setEnabled();
        enableBtn();
    }

    function getText() {
        var range = UE.getEditor('editors').selection.getRange();
        range.select();
        var txt = UE.getEditor('editors').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editors').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editors').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UE.getEditor('editors').focus();
    }
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editors').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    function getLocalData () {
        alert(UE.getEditor('editors').execCommand( "getlocaldata" ));
    }

    function clearLocalData () {
        UE.getEditor('editors').execCommand( "clearlocaldata" );
        alert("已清空草稿箱")
    }*/

    //时间控件
    $(function () {
        //$("#PublishTime").calendar();
        //$("#ArrivalTime").calendar();
        $('#PublishTime').datetimepicker({
            language: 'zh-CN',  //日期
            format: 'yyyy-mm-dd',
            minView: "month",
            todayBtn: 1,
            autoclose: 1
        })

        $('#ArrivalTime').datetimepicker({
            language: 'zh-CN',  //日期
            format: 'yyyy-mm-dd',
            minView: "month",
            todayBtn: 1,
            autoclose: 1
        })
    });

    //将时间戳转化为时间格式
    function getLocalTime(nS) {
        return new Date(parseInt(nS) * 1000).toLocaleString().substr(0, 9).replace('/', "-").replace('/', "-");
    }

    /* 时间戳转换日期 
   unixTime    待时间戳(秒)
   bool isFull    返回完整时间(Y-m-d 或者 Y-m-d H:i:s) 
   int timeZone   时区*/
    function UnixToDate(unixTime, isFull, timeZone) {
        if (typeof (timeZone) == 'number')
        {
            unixTime = parseInt(unixTime) + parseInt(timeZone) * 60 * 60;
        }
        var time = new Date(unixTime * 1000);
        var ymdhis = "";
        ymdhis += time.getUTCFullYear() + "-";
        ymdhis += (time.getUTCMonth()+1) + "-";
        ymdhis += time.getUTCDate();

        if (isFull === true)
        {
            ymdhis += " " + time.getUTCHours() + ":";
            ymdhis += time.getUTCMinutes() + ":";
            ymdhis += time.getUTCSeconds();
        }
        return ymdhis;
    }
</script>

